/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ImdbFrame.java
 *
 * Created on Mar 6, 2012, 10:56:34 PM
 */
package subtitles;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author tharindu_DG
 */
public class ImdbFrame extends javax.swing.JFrame {

    /** Creates new form ImdbFrame */
    public ImdbFrame(String movieName) {
        initComponents();  // initializing components
        movieYear = " ";   // tracking the year of the movie
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        movieInfo = new ImdbDataHandler();  // initialising ImdbDataHandler
        getNameAndYear(movieName);   // separating movie name & year
        try {
            Integer.parseInt(movieYear);  // verifing the movie year
            setMovieDetails(movieInfo.getMovieInfo(movieName + " (" + movieYearTxt + ")"));
        } catch (Exception e) {
            setMovieDetails(movieInfo.getMovieInfo(movieName));
        }

        movieNameTxt.setText(this.movieName);  // initializing UI with the appropriate movie name
        movieYearTxt.setText(movieYear); // initializing UI with the appropriate movie year
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imdbScrollPane = new javax.swing.JScrollPane();
        imdbTextArea = new javax.swing.JTextArea();
        movieNameTxt = new javax.swing.JTextField();
        movieSearchBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        movieYearTxt = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IMDB Information");
        setResizable(false);

        imdbScrollPane.setAutoscrolls(true);
        imdbScrollPane.setFont(new java.awt.Font("Times New Roman", 0, 11));
        imdbScrollPane.setHorizontalScrollBar(null);

        imdbTextArea.setColumns(20);
        imdbTextArea.setEditable(false);
        imdbTextArea.setFont(new java.awt.Font("Verdana", 0, 13));
        imdbTextArea.setLineWrap(true);
        imdbTextArea.setRows(5);
        imdbScrollPane.setViewportView(imdbTextArea);

        movieNameTxt.setFont(new java.awt.Font("Verdana", 1, 12));
        movieNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieNameTxtActionPerformed(evt);
            }
        });

        movieSearchBtn.setText("Search");
        movieSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieSearchBtnActionPerformed(evt);
            }
        });

        movieYearTxt.setFont(new java.awt.Font("Verdana", 1, 12));
        jScrollPane1.setViewportView(movieYearTxt);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("Movie");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel2.setText("Year");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(movieNameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(movieSearchBtn)
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imdbScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(movieNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addComponent(movieSearchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 6, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imdbScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Action preformed when the "search" button is clicked
    private void movieSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieSearchBtnActionPerformed

        String searchFor = movieNameTxt.getText().trim();
        if (searchFor != null && !searchFor.equals("")) {  // verifying the text
            setMovieDetails(movieInfo.getMovieInfo(searchFor));
        } else {
            JOptionPane.showMessageDialog(null, "Enter a movie name!");
        }
    }//GEN-LAST:event_movieSearchBtnActionPerformed

    private void movieNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_movieNameTxtActionPerformed

    // function to set movie title
    private void setMovieTitle(String string) {
        movieNameTxt.setText(string);
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane imdbScrollPane;
    private javax.swing.JTextArea imdbTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField movieNameTxt;
    private javax.swing.JButton movieSearchBtn;
    private javax.swing.JTextPane movieYearTxt;
    // End of variables declaration//GEN-END:variables
    private ImdbDataHandler movieInfo;
    private String movieName;
    private String movieYear;

    // function to set movie details
    private void setMovieDetails(String string) {
        imdbTextArea.setText("\n" + string);
    }

    // function to separate movie name and year
    private void getNameAndYear(String movieName) {
        if (movieName == null) {
            return;
        }
        this.movieName = "";
        String[] splited = movieName.split(" ");
        if (splited.length == 2) {
            this.movieName = splited[0];
            movieYear = splited[1].replace(')', ' ').replace('(', ' ');
        } else {
            for (int i = 0; i < splited.length - 1; i++) {
                this.movieName += " " + splited[i];
            }
            movieYear = splited[splited.length - 1].replace(')', ' ').replace('(', ' ');
        }

    }

    // function to get movie name
    public String getMovieName() {
        return movieName;
    }
}
